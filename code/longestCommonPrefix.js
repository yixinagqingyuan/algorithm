/** @format */

// 最长公共前缀
//编写一个函数来查找字符串数组中的最长公共前缀。
//如果不存在公共前缀，返回空字符串 ""。

//输入: ["flower","flow","flight"]
//输出: "fl"
// 这一题的思路，就是遍历
let longestCommonPrefix = (arr) => {
  // // 首先我们老规矩，先得弄个结果字符串，保存前缀啊
  // let fix = ''
  // 然后指定要遍历，但是遍历的方式要变一变，我们要遍历第一个第一个字符串
  // 这一题很巧妙我们既然求公共前缀，那么说明这三个至少是都可以遍历的
  // 因为公共 就是三个共有，当有不相同的时候，就不是公共的部分了，我们直接退出就行
  // 这里我们就遍历第一个就行
  for (let i = 0; i < arr[0].length; i++) {
    // 然后取出第一个的值
    let s = arr[0][i]
    // 然后再开始遍历正主 这里我们要从第2个开始
    // 之所以要从第二个开始，原因很简单，我们要用第一个单词的字母去跟第二个比较啊
    // 你从头开始比较有个屁用啊
    for (let j = 1; j < arr.length; j++) {
      // 接下来就很简单了，我们只需要便利比较就行，发现后头的同样的位置又不一样的，直接retrun
      if (s != arr[j][i]) {
        return arr[0].slice(0, i)
      }
    }
  }
}

console.log(longestCommonPrefix(['abcdef', 'abdefw', 'abc']))
