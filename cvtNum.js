/** @format */
// 将中文数字转成数字
//二千亿零一百零一万零二百 转为 200001010200
const cvtNum = (digit) => {
  // 这里还是要区分12345 和个十千百万
  const numChar = {
    零: 0,
    一: 1,
    二: 2,
    三: 3,
    四: 4,
    五: 5,
    六: 6,
    七: 7,
    八: 8,
    九: 9,
  }
  const numChar2 = {
    十: 10,
    百: 100,
    千: 1000,
    万: 10000,
    亿: 100000000,
  }
  // 做一个参考变量
  let sum = 0 // 总数
  let temp = 0 // 临时变量为了累加内容
  for (let i = 0; i < digit.length; i++) {
    const char = digit[i]
    // 等于 0 的时候没啥用，因为是相加的吗，所以要略过去
    if (char == '零') {
      continue
    }
    // 这个题当他等于 亿和万的时候 我们需要特殊处理，其他的 就按照千分位累加就可以了
    if (char == '亿' || char == '万') {
      // 这时候我们需要根据 char 做累加
      sum += temp * numChar2[char]
      temp = 0
    } else {
      //否则我们就按照千分位累加但是如果他后头跟的是亿或者万，那么就说说明得乘，不能加了就
      // 获取下一位
      const next = digit[i + 1]
      // 如果不等于亿或者并且不等于万的时候
      // 这个时候只能之所以能成事，主要原因由于 我一百，一千，一十， 都是双双出现
      // 于是，我们可以发现我们直接给第一个和第二个去掉， 就会直接拿到一百，一千，等的结果
      if (next && next !== '亿' && next !== '万') {
        //  这里为啥要取下一个呢，很简单比如我是两千，两百，二十，2
        // 所以这时候就要给他乘以出来
        // 并且这里要加等
        temp += numChar[char] * numChar2[next]
        i++
      } else {
        // 接下来就是 既不是万和亿的情况，就是后头跟着万和亿的情况
        // 这时候，就要给加上 或者 没有下一个的情况， 就要给加上
        temp += numChar[char]
      }
    }
  }
  // 所以他最后一定还有个尾巴，也就是万之后的内容，要给他加上
  // 之所以要给加上，就是因为我们遇见万之后，不给 temp 清零
  console.log(sum + temp)
}
cvtNum('二千亿零一百一十万零二百零一')
